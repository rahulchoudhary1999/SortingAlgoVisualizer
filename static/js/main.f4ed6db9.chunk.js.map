{"version":3,"sources":["logo.svg","sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","randomIntFromInterval","min","max","random","SortingVisualizer","classes","React","useState","buttonState","setArray","useEffect","document","body","style","resetArray","className","AppBar","position","background","Toolbar","Typography","variant","Button","disabled","color","onClick","g","m","e","f","getBubbleSortAnimations","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","setTimeout","backgroundColor","barFirstIdx","newFirstBarHeight","barSecondIdx","newSecondBarHeight","height","bubbleSort","temp","getLinearSortAnimations","barFirstIndex","barSecondIndex","barFirstStyle","barSecondStyle","linearSort","smallestIdx","getSelectionSortAnimations","console","log","selectionSort","newHeight","mergeSort","map","value","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4ed6db9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, j]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push([k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([i, i]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([i, i]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      // These are the values that we're comparing; we push them once\r\n      // to change their color.\r\n      animations.push([j, j]);\r\n      // These are the values that we're comparing; we push them a second\r\n      // time to revert their color.\r\n      animations.push([j, j]);\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n\r\n\r\n export function getBubbleSortAnimations(array)\r\n  {\r\n    var animations=[];\r\n    var m=array.length-2;\r\n    var g;\r\n    for(;m>=0;m--)\r\n    {\r\n      var e=0;\r\n      var f=1;\r\n      while(e<=m)\r\n      {\r\n        animations.push([e,f]);\r\n        animations.push([e,f]);\r\n        if(array[f]<array[e])\r\n        {\r\n          g=array[e];\r\n          array[e]=array[f];\r\n          array[f]=g;\r\n        }\r\n        //animations.push([]);\r\n        animations.push([e,array[e],f,array[f]]);\r\n        e++;\r\n        f++;\r\n      }\r\n\r\n    }\r\n    return animations;\r\n  }\r\n\r\n\r\n  export function getLinearSortAnimations(array)\r\n  {\r\n    var animations=[];\r\n    var temp;\r\n    for(var e=0;e<=array.length-2;e++)\r\n    {\r\n      for(var f=e+1;f<=array.length-1;f++)\r\n      {\r\n        animations.push([e,f]);\r\n        animations.push([e,f]);\r\n        if(array[f]<array[e])\r\n        {\r\n          temp=array[e];\r\n          array[e]=array[f];\r\n          array[f]=temp;\r\n        }\r\n        animations.push([e,array[e],f,array[f]]);\r\n      }\r\n    }\r\n    return animations;\r\n  }\r\n\r\n  export function getSelectionSortAnimations(array)\r\n  {\r\n   \r\n    var animations=[];\r\n    var smallestIdx;\r\n    var temp;\r\n    for(let e=0;e<=array.length-2;e++)\r\n    {\r\n      smallestIdx=e;\r\n      for(let f=e+1;f<=array.length-1;f++)\r\n      {\r\n        \r\n        if(array[f]<array[smallestIdx])\r\n        {\r\n          smallestIdx=f;\r\n        }\r\n        \r\n      }\r\n      temp=array[smallestIdx];\r\n      array[smallestIdx]=array[e];\r\n      array[e]=temp;\r\n      animations.push([e,smallestIdx]);\r\n        animations.push([e,smallestIdx]);\r\n      animations.push([e,array[e],smallestIdx,array[smallestIdx]]);\r\n    }\r\n    \r\n    return animations;\r\n  }\r\n\r\n  ","import React,{Component} from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport './SortingVisualizer.css';\r\nimport {getMergeSortAnimations} from '../sortingAlgorithms/sortingAlgorithms';\r\nimport {getBubbleSortAnimations} from '../sortingAlgorithms/sortingAlgorithms';\r\nimport {getLinearSortAnimations} from '../sortingAlgorithms/sortingAlgorithms';\r\nimport {getSelectionSortAnimations} from '../sortingAlgorithms/sortingAlgorithms';\r\nconst ANIMATION_SPEED_MS = 10;\r\nconst NUMBER_OF_ARRAY_BARS = 35;\r\nconst PRIMARY_COLOR = '#39CCCC';\r\nconst SECONDARY_COLOR = '#B10DC9';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst SortingVisualizer=()=>{\r\n    const classes = useStyles();\r\n    const [buttonState,setButtonState]=React.useState(false);\r\n    const [array,setArray]=React.useState([]);\r\n    React.useEffect(()=>{\r\n        document.body.style = 'background: #DDDDDD;';\r\n       resetArray();\r\n    },[]);\r\n\r\n    \r\n    const resetArray=()=>\r\n    {\r\n        const array=[];\r\n        for(let i=0;i<NUMBER_OF_ARRAY_BARS;i++)\r\n        {\r\n           array.push(randomIntFromInterval(5,700));\r\n        }\r\n        setArray(array);\r\n    }\r\n    \r\n    const mergeSort=()=>\r\n    {\r\n      const animations = getMergeSortAnimations(array);\r\n      for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n    }\r\n\r\n    const bubbleSort=()=>\r\n    {\r\n        const animations=getBubbleSortAnimations(array);\r\n        for(let i=0;i<animations.length;i++)\r\n        {\r\n            const arrayBars=document.getElementsByClassName('array-bar');\r\n            const isColorChange=i%3!==2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                  barOneStyle.backgroundColor = color;\r\n                  barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n              } else {\r\n                setTimeout(() => {\r\n                  const [barFirstIdx, newFirstBarHeight,barSecondIdx, newSecondBarHeight] = animations[i];\r\n                  const barFirstStyle = arrayBars[barFirstIdx].style;\r\n                  barFirstStyle.height = `${newFirstBarHeight}px`;\r\n                  const barSecondStyle = arrayBars[barSecondIdx].style;\r\n                  barSecondStyle.height = `${newSecondBarHeight}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n              }\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    const linearSort=()=>\r\n    {\r\n        const animations=getLinearSortAnimations(array);\r\n        const arrayBars=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<animations.length;i++)\r\n        {\r\n            const [barFirstIndex,barSecondIndex]=animations[i];\r\n            const colorChange=i%3!==2;\r\n            if(colorChange)\r\n            {\r\n               const barFirstStyle=arrayBars[barFirstIndex].style;\r\n               const barSecondStyle=arrayBars[barSecondIndex].style;\r\n               const color=i%3===0?SECONDARY_COLOR:PRIMARY_COLOR;\r\n               setTimeout(()=>{\r\n                   barFirstStyle.backgroundColor=color;\r\n                   barSecondStyle.backgroundColor=color;\r\n               },i*ANIMATION_SPEED_MS);\r\n            }\r\n            else {\r\n                \r\n                setTimeout(()=>{\r\n                    const [barFirstIdx, newFirstBarHeight,barSecondIdx, newSecondBarHeight] = animations[i];\r\n                    const barFirstStyle=arrayBars[barFirstIdx].style;\r\n                    const barSecondStyle=arrayBars[barSecondIdx].style;\r\n                    barFirstStyle.height=`${newFirstBarHeight}px`;\r\n                    barSecondStyle.height=`${newSecondBarHeight}px`;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n        }       \r\n    }\r\n\r\n    \r\n    const selectionSort=()=>\r\n    {\r\n        const animations=getSelectionSortAnimations(array);\r\n        for(let i=0;i<animations.length;i++)\r\n        {\r\n            const arrayBars=document.getElementsByClassName('array-bar');\r\n            const isColorChange=i%3!==2;\r\n            if (isColorChange) {\r\n                const [barOneIdx, barTwoIdx] = animations[i];\r\n                console.log(barOneIdx);\r\n                console.log(barTwoIdx);\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                  barOneStyle.backgroundColor = color;\r\n                  barTwoStyle.backgroundColor = color;\r\n                }, i * ANIMATION_SPEED_MS);\r\n              } else {\r\n                setTimeout(() => {\r\n                  const [barFirstIdx, newFirstBarHeight,barSecondIdx, newSecondBarHeight] = animations[i];\r\n                  const barFirstStyle = arrayBars[barFirstIdx].style;\r\n                  barFirstStyle.height = `${newFirstBarHeight}px`;\r\n                  const barSecondStyle = arrayBars[barSecondIdx].style;\r\n                  barSecondStyle.height = `${newSecondBarHeight}px`;\r\n                }, i * ANIMATION_SPEED_MS);\r\n              }\r\n\r\n        }\r\n    }\r\n        return(\r\n            <div>\r\n            <div className={classes.root}>\r\n        <AppBar position=\"static\"  style={{ background: '#39CCCC' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SortingAlgoVisualizer\r\n          </Typography>\r\n             <Button disabled={buttonState} color=\"inherit\" onClick={()=>{resetArray()}}>Generate New Array</Button>\r\n             <Button disabled={buttonState} color=\"inherit\" onClick={()=>{bubbleSort()}}>Bubble Sort</Button>\r\n             <Button disabled={buttonState} color=\"inherit\" onClick={()=>{linearSort()}}>Linear Sort</Button>\r\n             <Button disabled={buttonState} color=\"inherit\" onClick={()=>{selectionSort()}}>Selection Sort</Button>\r\n             <Button disabled={buttonState} color=\"inherit\" onClick={()=>{mergeSort()}}>Merge Sort</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n            \r\n            <div className='array-container'>\r\n            {\r\n                array.map((value,idx)=>{\r\n                    return(\r\n                        <div className=\"array-bar\" key={idx}\r\n                        style={{\r\n                            height:`${value}px`,\r\n                            backgroundColor:PRIMARY_COLOR\r\n                            }}>\r\n                            \r\n                        </div>\r\n                    )\r\n                })\r\n            } \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n// to generate random numbers in javascript\r\nconst randomIntFromInterval=(min,max)=>\r\n{\r\n    return Math.floor(Math.random()*(max-min+1)+min);\r\n}\r\n\r\nexport default SortingVisualizer;","import logo from './logo.svg';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer'\nfunction App() {\n  return (\n    <div className=\"App\">\n     <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}